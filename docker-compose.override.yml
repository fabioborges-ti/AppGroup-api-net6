services:
  webapi:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "8081:443"  
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - network
    depends_on:
    - postgresdb 
    - rabbitmq

  postgresdb:
    container_name: postgresdb
    hostname: postgresdb    
    command: |
      postgres 
      -c 'max_connections=200'
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    restart: always
    ports:  
      - "5432:5432" 
    volumes: 
      - C:\Dados\Infraestrutura\pg_hba.conf:/etc/postgresql/pg_hba.conf
      - C:\Dados\Infraestrutura\00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
      - C:\Dados\Infraestrutura\Postgres:/var/lib/postgresql/data
    networks:
      - network

  pgadmin:
    container_name: pgadmin
    hostname: pgadmin
    restart: always
    environment:
    - PGADMIN_DEFAULT_EMAIL=master@master.com
    - PGADMIN_DEFAULT_PASSWORD=1   
    ports:  
      - "6002:80"
    depends_on: 
      - postgresdb
    volumes: 
      - C:\Dados\PgAdminData:/root/.pgadmin    
      - C:\Dados\PgAdmin:/var/lib/pgadmin
    networks:
      - network
    
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=1
      - RABBITMQ_ERLANG_COOKIE='itsmycookiesecret'
    ports:
      - 5672:5672
      - 15672:15672
    volumes: 
      - C:\Dados\RabbitMQ:/var/lib/rabbitmq
    networks:
      - network
    
  portainer:
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - network  

  elasticsearch:
    container_name: elasticsearch
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - 9200:9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - network
 
  kibana:
     container_name: kibana
     environment:
       - ELASTICSEARCH_URL="http://localhost:9200"
     depends_on:
       - elasticsearch
     ports:
       - 5601:5601 
     networks:
      - network

networks:
  network:
     name: network     
